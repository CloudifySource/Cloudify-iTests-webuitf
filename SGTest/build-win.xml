<!--
 * Title:        SGTest ant build.xml file.
 * Description:  This Ant build.xml file builds sgtest project.
 			     Note that test folders are not complied here, nor added to gs-sgtest.jar.
 *
 * @author       Kobi
 * @version      1.0
-->

<project name="sgtest-builder" basedir="." default="sgtest_zip_1.6">

    <property name="sgtest.home" value="${basedir}"/>
    <property name="src" value="src"/>
    <property name="classes" value="classes"/>
    <property name="resources" value="${src}/resources"/>
    <property name="cli.dir" value="${src}/test/cli"/>
    <property name="cli.resources" value="${cli.dir}/resources"/>
	<property name="webuitf" value="${basedir}/apps/webuitf"/>
	
	<property environment="env."/>

    <!-- sgtest output -->
    <property name="sgtest.output.dir" value="${sgtest.home}/output"/>
    <property name="sgtest.output.temp.dir" value="${sgtest.output.dir}/temp"/>
    <property name="sgtest.jar.name" value="gs-sgtest.jar"/>

    <!-- sgtest libraries -->
    <property name="sgtest.lib" value="${sgtest.home}/lib"/>
    <property name="java16.home" value="C:\Java\jdk1.6.0_26"/>

	
    <!-- sgtest classpath -->
    <path id="classpath">
    	
        <!-- commons jars -->
        <fileset dir="${sgtest.lib}/commons">
            <include name="**/*.jar"/>
        </fileset>

        <!-- testng jars -->
        <fileset dir="${sgtest.lib}/testng">
            <include name="**/*.jar"/>
        </fileset>

        <!--<fileset dir="${gsHome.dir}/lib">-->
            <!--<include name="**/*.jar"/>-->
            <!--<exclude name="**/mule-os.jar"/>-->
        <!--</fileset>-->

        <fileset dir="${gsHome.dir}/lib/required">
            <include name="**/*.jar"/>
        </fileset>
    	
        <fileset dir="${gsHome.dir}/lib/platform/esm">
            <include name="**/*.jar"/>
        </fileset>

        <fileset dir="${gsHome.dir}/lib/platform/usm">
            <include name="**/*.jar"/>
        </fileset>

        <fileset dir="${gsHome.dir}/lib/platform/sigar">
            <include name="**/*.jar"/>
        </fileset>

        <!-- CLI jars -->
        <fileset dir="${gsHome.dir}/tools/cli">
            <include name="**/*.jar"/>
        </fileset>

        <pathelement path="${sgtest.lib}"/>
        <!--<pathelement path="${sgtest.junit}"/>-->
        <pathelement path="${sgtest.testng}"/>

        <!-- selenium jars -->
        <fileset dir="${sgtest.lib}/selenium">
            <include name="**/*.jar"/>
        </fileset>
    	
    	<!-- Webui jars -->
    		<fileset dir="${sgtest.lib}/webui">
    			<include name="**/*.jar"/>
    	</fileset>

        <!-- hamcrest jars -->
        <fileset dir="${sgtest.lib}/hamcrest">
            <include name="**/*.jar"/>
        </fileset>

        <!-- hsql jar -->
        <fileset dir="${sgtest.lib}/hsql">
            <include name="**/*.jar"/>
        </fileset>

        <!-- xml jars -->
        <fileset dir="${sgtest.lib}/xml">
            <include name="**/*.jar"/>
        </fileset>

        <!-- hiberbate jars -->
        <fileset dir="${sgtest.lib}/hibernate">
            <include name="**/*.jar"/>
        </fileset>

        <!-- spring jars -->
        <fileset dir="${sgtest.lib}/spring">
            <include name="**/*.jar"/>
        </fileset>

        <!-- Jsch jars -->
        <fileset dir="${sgtest.lib}/jsch">
            <include name="**/*.jar"/>
        </fileset>

        <!-- SSHD jars -->
        <fileset dir="${sgtest.lib}/sshd">
            <include name="**/*.jar"/>
        </fileset>

        <!-- Cassandra client jars -->
        <fileset dir="${sgtest.lib}/pelops">
            <include name="**/*.jar"/>
        </fileset>

        <!-- XenServer jars -->
        <fileset dir="${sgtest.lib}/xenserver">
            <include name="**/*.jar"/>
        </fileset>

        <!-- simplejavaprocessjars -->
        <fileset dir="${sgtest.lib}/../apps/USM/usm/simplejavaprocess">
            <include name="**/*.jar"/>
        </fileset>


        <!-- mail jars -->
        <fileset dir="${sgtest.lib}/mail">
            <include name="**/*.jar"/>
        </fileset>
		
		<!-- wiki jars -->
        <fileset dir="${sgtest.lib}/wiki">
            <include name="**/*.jar"/>
        </fileset>
		
		<!-- xstream jars -->
        <fileset dir="${sgtest.lib}/xstream">
            <include name="**/*.jar"/>
        </fileset>

        <!-- jackson jars -->
        <fileset dir="${sgtest.lib}/jackson">
            <include name="**/*.jar"/>
        </fileset>

        <!-- jgit jars -->
        <fileset dir="${sgtest.lib}/jgit">
            <include name="**/*.jar"/>
        </fileset>

        <!-- jclouds jars -->
        <fileset dir="${sgtest.lib}/jclouds">
            <include name="**/*.jar"/>
        </fileset>

        <!-- groovy jars -->
        <fileset dir="${gsHome.dir}/tools/groovy/lib">
            <include name="**/groovy*.jar"/>
            <include name="**/commons-logging*.jar"/>
            <include name="**/commons-cli*.jar"/>
            <include name="**/bsf*.jar"/>
        </fileset>


    </path>

    <!-- The project targets -->
    <target name="prepare">
        <!-- Create the time stamp -->
        <tstamp/>

        <delete dir="${sgtest.home}/output"/>
        <mkdir dir="${sgtest.home}/output"/>

        <delete dir="${classes}"/>
        <!-- Create the classes directory structure used by compile -->
        <mkdir dir="${classes}"/>
    	
    	<copy todir="${classes}">
    	  <fileset dir="${src}">
    	    <include name="**/*.groovy"/>
    	    <exclude name="**/test/webui/resources/**/*.groovy"/>
    	  </fileset>
    	</copy>
    	
    	<exec executable="${env.M2_HOME}\bin\mvn.bat" dir="${webuitf}">
    		<arg value="package"/>
    	</exec>
    	<copy file="${webuitf}/target/webuitf.jar" todir="${sgtest.lib}/webui" overwrite="true"/>
    	<copy file="${webuitf}/target/webuitf-sources.jar" todir="${sgtest.lib}/webui" overwrite="true"/>
    	<delete dir="${webuitf}"/>
    	
    </target> 

    <target name="compile" depends="prepare, build-projects">
        <!-- Compile the java code from ${src} into ${classes} -->
        <javac classpathref="classpath" srcdir="${src}" includes="**/*" destdir="${classes}" debug="on"
               executable="${java16.home}\bin\javac" taskname="javac1.6" fork="false" memorymaximumsize="512m" verbose="true">
        </javac>
    	
    </target>

    <target name="build-projects">
        <subant target="build-projects">
            <fileset dir="${basedir}/apps" includes="build.xml" excludes=""/>
        </subant>
    </target>
	
	<target name="compile groovy" depends="prepare">
		<!--	define task to compile .groovy -->
				<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" 
					classpathref="classpath"/> 
		<!--	compiling .groovy to .class -->
				<mkdir dir="${classes}/groovy"/>
		   		<groovyc srcdir="${src}" destdir="${classes}/groovy"/> 
	</target>

    <!--
   ========================
       Create sgtest.jar
   ======================== -->

    <target name="jar1_6" depends="compile">
        <jar jarfile="${sgtest.output.dir}/${sgtest.jar.name}">
            <manifest>
                <attribute name="Build-Version" value="${sgtest.version}"/>
                <attribute name="Jdk" value="1.6"/>
            </manifest>

            <fileset dir="${classes}"/>
            <fileset dir="${src}" includes="**/resources/**"/>
            <fileset dir="${src}" includes="**/mailreporter.properties"/>
            <fileset dir="${src}" includes="**/wikireporter.properties"/>
        	<fileset dir="${sgtest.lib}/webui" includes="**/*.jar"/>
            <fileset dir="${sgtest.home}" includes="apps/**"/>
        </jar>
    </target>

    <!--
   ==========================
       Create sgtest.zip
   ========================== -->

    <target name="sgtest_zip_1.6" depends="compile, jar1_6, javadoc">
        <create_sgtest_zip jdkVer="1.6" dirname="sgtest"/>
    </target>

    <macrodef name="create_sgtest_zip">
        <attribute name="jdkVer"/>
        <attribute name="dirName"/>
        <sequential>
            <echo message="create empty directories that will be added to jar."/>
            <mkdir dir="${sgtest.home}/output/tmp/output"/>
            <mkdir dir="${sgtest.home}/deploy/local-builds"/>
            <mkdir dir="${sgtest.home}/deploy/result_indicator"/>
            <make-dos2unix workingDir="${sgtest.home}/deploy/bin"/>
            <make-dos2unix workingDir="${sgtest.home}/bin"/>
            <echo message="create zip"/>
            <zip destfile="${sgtest.output.dir}/@{dirName}-@{jdkVer}.zip" update="true">
                <zipfileset dir="${sgtest.home}" prefix="@{dirName}" filemode="775" includes="changeLog.txt"/>
                <zipfileset dir="${sgtest.output.dir}/javadoc" prefix="@{dirName}/javadoc" filemode="775"/>
                <zipfileset dir="${sgtest.output.dir}" prefix="@{dirName}/lib" includes="${sgtest.jar.name}"
                            filemode="775"/>
                <zipfileset dir="${sgtest.home}/bin" prefix="@{dirName}/bin" includes="*.bat, *.sh, *.xml, *.properties"
                            filemode="775"/>
                <zipfileset dir="${sgtest.home}/apps/archives" prefix="@{dirName}/apps/archives" includes="*.jar, *.war"
                            filemode="775"/>
                <zipfileset dir="${sgtest.home}/config" prefix="@{dirName}/config" filemode="775"/>
                <zipfileset dir="logs" prefix="@{dirName}/logs" filemode="775" excludes="*.*"/>
                <zipfileset dir="${sgtest.lib}/testng" prefix="@{dirName}/lib/testng" includes="*.jar" filemode="775"/>
                <zipfileset dir="${sgtest.lib}/commons" prefix="@{dirName}/lib/commons" includes="*.jar"
                            filemode="775"/>
                <zipfileset dir="${sgtest.lib}/htmlunit" prefix="@{dirName}/lib/htmlunit" includes="*.jar"
                            filemode="775"/>
                <zipfileset dir="${sgtest.lib}/xml" prefix="@{dirName}/lib/xml" includes="*.jar" filemode="775"/>
                <zipfileset dir="${sgtest.lib}/xml" prefix="@{dirName}/lib/hamcrest" includes="*.jar" filemode="775"/>
                <zipfileset dir="${sgtest.lib}/xml" prefix="@{dirName}/lib/hibernate" includes="*.jar" filemode="775"/>
                <zipfileset dir="${sgtest.lib}/xml" prefix="@{dirName}/lib/hsql" includes="*.jar" filemode="775"/>
                <zipfileset dir="${sgtest.lib}/xml" prefix="@{dirName}/lib/jsch" includes="*.jar" filemode="775"/>
                <zipfileset dir="${sgtest.lib}/xml" prefix="@{dirName}/lib/selenium" includes="*.jar" filemode="775"/>
                <zipfileset dir="${sgtest.lib}/xml" prefix="@{dirName}/lib/spring" includes="*.jar" filemode="775"/>
                <zipfileset dir="${sgtest.lib}/xml" prefix="@{dirName}/lib/xenserver" includes="*.jar" filemode="775"/>
                <zipfileset dir="${sgtest.home}/output/tmp/output" prefix="@{dirName}/output" filemode="775"
                            excludes="**.*"/>
                <zipfileset dir="${sgtest.home}/deploy" prefix="@{dirName}/deploy" filemode="775"/>
            </zip>

            <echo message="delete temporary files, directories"/>
            <delete file="${sgtest.output.dir}/${sgtest.jar.name}"/>
            <delete dir="${sgtest.output.dir}/javadoc"/>
            <delete dir="${sgtest.home}/output/tmp"/>
        </sequential>
    </macrodef>

    <target name="javadoc">
        <delete dir="${sgtest.output.dir}/javadoc"/>
        <javadoc sourcepath="${src}" destdir="${sgtest.output.dir}/javadoc">
            <classpath refid="classpath"/>
            <packageset dir="src" defaultexcludes="yes">
                <include name="**"/>
            </packageset>
        </javadoc>
    </target>

    <macrodef name="make-dos2unix">
        <attribute name="workingDir"/>

        <sequential>
            <!-- Replaces EOLs with LF characters and removes eof characters
 from the shell scripts. Tabs and spaces are left as is. -->
            <fixcrlf srcdir="@{workingDir}"
                     eol="lf"
                     eof="remove"
                     includes="**/*.sh **/gs_ant"
                     defaultexcludes="no"
                    />
            <!-- Replaces all EOLs with cr-lf pairs in the batch files.
    Tabs and spaces are left as is. EOF characters are left alone if run on DOS systems,
    and are removed if run on Unix systems. -->
            <fixcrlf srcdir="@{workingDir}"
                     eol="crlf"
                     includes="**/*.bat"
                     defaultexcludes="no"
                    />

            <!--  Converts all EOLs in the included java source and xml files to a single LF.
Replace all TAB characters except those in string or character constants with spaces,
assuming a tab width of 3. If run on a unix system, any CTRL-Z EOF characters at
the end of the file are removed. On DOS/Windows, any such EOF characters will be left untouched.. -->
            <fixcrlf srcdir="@{workingDir}"
                     eol="lf"
                     javafiles="yes"
                     includes="**/*.java **/*.xml"
                     defaultexcludes="no"
                    />
        </sequential>
    </macrodef>

</project>