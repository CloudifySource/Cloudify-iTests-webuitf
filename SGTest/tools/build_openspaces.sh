#!/bin/bash
#


error() {
  set -x
  echo $1
  popd
  exit 1
}
set +x
pushd `dirname $0`

echo checking java version
java15=`${JAVA_HOME}/bin/java -version 2>&1 | grep -q 1.5 && echo "true" || echo "false"`
if [ "$java15" == "false" ] ; then
 error "Wrong java version. Use java 1.5"
fi

#checking gigaspaces/tools/build.properties build number
pushd ../../gigaspaces/tools
if [ -f build.properties ] ; then
  dos2unix build.properties
  . build.properties
  # remove build.properties if source code has newer version
  cat ../src/java/com/j_spaces/kernel/PlatformVersion.java | grep ${buildnumber} || rm build.properties
fi

if [ ! -f build.properties ] ; then
  ant
  dos2unix build.properties
  . build.properties
  export gsruntimejar="../releases/build_${buildnumber}/jars/1.5/not_obf/gs-runtime.jar"
  if [ ! -f ${gsruntimejar} ] ; then error " ${gsruntimejar} not found. Build Failed"; fi
  export gsbootjar="../releases/build_${buildnumber}/jars/1.5/not_obf/gs-boot.jar"
  if [ ! -f ${gsbootjar} ] ; then error "${gsbootjar} not found. Build Failed"; fi
#  export gsuijar="../releases/build_${buildnumber}/jars/1.5/not_obf/gs-ui.jar"
#  if [ ! -f ${gsuijar} ] ; then error "${gsuijar} not found. Build Failed"; fi
fi
dos2unix build.properties
. build.properties
for x in $(echo $versionnumber | tr "-" "\n" )
do
export version=$x
break
done
echo version=$version milestone=$milestone buildnumber=$buildnumber
popd
if [ -d gigaspaces ] ; then
  pushd gigaspaces
  cd bin
  . setenv.sh
  gs_buildnumber=`$JAVACMD -classpath "${GS_JARS}" com.j_spaces.kernel.PlatformVersion | sed 's/.*build \([0-9]\+-[0-9]\+\).*/\1/'`
  popd

  if [ ! "${buildnumber}" == "${gs_buildnumber}" ] ; then
   # deleting old gigaspaces version
   rm -f -r gigaspaces
   if [ -d "gigaspaces" ] ; then error "JAR Locked Error" ; fi
  fi
fi

if [ ! -d "gigaspaces" ] ; then
  echo copying new version of xap from tarzan
  export gigazip="gigaspaces-*${buildnumber}.zip"
  if [ ! -f ${gigazip} ] ; then
    cp /export/builds/$version/build_${buildnumber}/xap-premium/1.5/gigaspaces-*${buildnumber}.zip .
  fi
  if [ ! -f ${gigazip} ] ; then error "cannot copy /export/builds/$version/build_${buildnumber}/xap-premium/1.5/gigaspaces-*${buildnumber}.zip"; fi
  unzip gigaspaces-*${buildnumber}.zip
  rm gigaspaces-*${buildnumber}.zip
  mv gigaspaces*${milestone} gigaspaces
fi

echo compiling openspaces
pushd ../../openspaces
ant clean
rm -f lib/required/gs-openspaces.jar
rm -f lib/optional/openspaces/gs-openspaces-src.zip
ant buildmain fulljar srczip
if [ ! -f "lib/required/gs-openspaces.jar" ] ; then error "gs-openspaces.jar Build Failed"; fi
if [ ! -f "lib/optional/openspaces/gs-openspaces-src.zip" ] ; then error "gs-openspaces-src.zip Build Failed"; fi

echo copying lib/required/gs-runtime.jar
rm -f ../SGTest/tools/gigaspaces/lib/required/gs-runtime.jar
if [ -f "../SGTest/tools/gigaspaces/lib/required/gs-runtime.jar" ] ; then error "JAR locked" ; fi
cp -f ../gigaspaces/releases/build_${buildnumber}/jars/1.5/not_obf/gs-runtime.jar ../SGTest/tools/gigaspaces/lib/required/

echo copying lib/platform/boot/gs-boot.jar
rm -f ../SGTest/tools/gigaspaces/lib/platform/boot/gs-boot.jar
if [ -f "../SGTest/tools/gigaspaces/lib/platform/boot/gs-boot.jar" ] ; then error "JAR locked" ; fi
cp -f ../gigaspaces/releases/build_${buildnumber}/jars/1.5/not_obf/gs-boot.jar ../SGTest/tools/gigaspaces/lib/platform/boot/

#echo copying lib/platform/ui/gs-ui.jar
#rm -f ../SGTest/tools/gigaspaces/lib/platform/ui/gs-ui.jar
#if [ -f "../SGTest/tools/gigaspaces/lib/platform/ui/gs-ui.jar" ] ; then error "JAR locked" ; fi
#cp -f ../gigaspaces/releases/build_${buildnumber}/jars/1.5/not_obf/gs-ui.jar ../SGTest/tools/gigaspaces/lib/platform/ui/

echo copying lib/required/gs-openspaces.jar
rm -f ../SGTest/tools/gigaspaces/lib/required/gs-openspaces.jar
if [ -f "../SGTest/tools/gigaspaces/lib/required/gs-openspaces.jar" ] ; then error "JAR locked" ; fi
cp -f lib/required/gs-openspaces.jar ../SGTest/tools/gigaspaces/lib/required/

echo copying lib/optional/openspaces/gs-openspaces-src.zip
rm -f ../SGTest/tools/gigaspaces/lib/optional/openspaces/gs-openspaces-src.zip
if [ -f "../SGTest/tools/gigaspaces/lib/optional/openspaces/gs-openspaces-src.zip" ] ; then error "JAR locked" ; fi
cp -f lib/optional/openspaces/gs-openspaces-src.zip ../SGTest/tools/gigaspaces/lib/optional/openspaces/
popd

# generated by tests and needs to be regenerated after build next time the test runs
rm -f gigaspaces-xap-premium*${buildnumber}.zip

echo DONT FORGET TO REFRESH THE ECLIPSE SGTEST PROJECT
popd
exit 0
