package framework.junit;


import org.junit.internal.builders.IgnoredClassRunner;
import org.junit.runner.Description;
import org.junit.runner.Runner;
import org.junit.runner.notification.RunListener;
import org.junit.runner.notification.RunNotifier;
import org.junit.runners.BlockJUnit4ClassRunner;
import org.junit.runners.model.InitializationError;

import framework.annotations.RequiredMachinesAnnotationHelper;


public class ServiceGridJUnit4ClassRunner extends Runner {

	private final Class<?> clazz;
	private final Runner runner;
	private final RunListener runListener = new ServiceGridRunListener();

	public ServiceGridJUnit4ClassRunner(Class<?> clazz) throws InitializationError {
		this.clazz = clazz;
		runner = new BlockJUnit4ClassRunner(clazz);
	}

	@Override
	public void run(RunNotifier notifier) {
		notifier.addListener(runListener);
		try{
			if (!RequiredMachinesAnnotationHelper.accept(clazz)) {
				new IgnoredClassRunner(clazz).run(notifier);
			}else {
				runner.run(notifier);
			}
		}finally {
			notifier.removeListener(runListener);
		}
	}

	@Override
	public Description getDescription() {
		return runner.getDescription();
	}
} 
